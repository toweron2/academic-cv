user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    server {
      listen 443 ssl;
      server_name toweron.top;

      ssl_certificate /etc/nginx/cert/toweron.top.pem;
      ssl_certificate_key /etc/nginx/cert/toweron.top.key;

      # 其他SSL配置参数
      ssl_session_cache shared:SSL:1m;
      ssl_session_timeout 5m;

      #自定义设置使用的TLS协议的类型以及加密套件（以下为配置示例，请您自行评估是否需要配置）
      #TLS协议版本越高，HTTPS通信的安全性越高，但是相较于低版本TLS协议，高版本TLS协议对浏览器的兼容性较差。
      ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
      ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

      #表示优先使用服务端加密套件。默认开启
      ssl_prefer_server_ciphers on;

      root /usr/share/nginx/html;
      location / {
      }
      error_page 404 /404.html;
      location = /40x.html {
      }
      error_page 500 502 503 504 /50x.html;
      location /50x.html {
      }
    }

    server {
      listen       80;
      server_name  toweron.top;

      #将所有HTTP请求通过rewrite指令重定向到HTTPS。
      rewrite ^(.*)$ https://$host$1;

      #access_log  logs/host.access.log  main;

      location / {
             root html;
             index index.html index.htm;
      }
    }
}
